sudo: required
dist: xenial
group: travis_latest
language: cpp
os:
  - linux

branches:
  excludes:
    - gh-pages
    - tutorials
    - installers
    - dart-0.4.0

compiler:
  - gcc

env:
  matrix:
  global:
    - MADARA_ROOT=$TRAVIS_BUILD_DIR/madara
    - GAMS_ROOT=$TRAVIS_BUILD_DIR
    - MPC_ROOT=$TRAVIS_BUILD_DIR/MPC
    - EIGEN_ROOT=$TRAVIS_BUILD_DIR/eigen
    - CAPNP_ROOT=$TRAVIS_BUILD_DIR/capnproto
    - LD_LIBRARY_PATH=$MADARA_ROOT/lib:$GAMS_ROOT/lib:$LD_LIBRARY_PATH:$CAPNP_ROOT/c++/.libs
    - CORES=6
    - TESTS="tests"
    - GAMS="gams"

matrix:

  allow_failures:
    - env: NAME="OSX 10.13 clang zmq" CLANG="clang" ZMQ="zmq"
    - env: NAME="Ubuntu 16.04 android zmq" ANDROID="android" ZMQ="zmq" TESTS="" CLANG="" GAMS=""
    - env: NAME="Ubuntu 16.04 android" ANDROID="android" SSL="ssl" TESTS="" CLANG="" GAMS=""

  include:
      ################MAC#####################

      # clang, osx, no ssl
    - compiler: clang
      env: NAME="OSX 10.13 clang" CLANG="clang"
      os: osx
      osx_image: xcode9.3

      # clang, osx, ssl
    - compiler: clang
      env: NAME="OSX 10.13 clang ssl" CLANG="clang" SSL="ssl" SSL_ROOT=/usr/local/opt/openssl
      os: osx
      osx_image: xcode9.3

      # clang, osx, java
    - compiler: clang
      env: NAME="OSX 10.13 clang java" CLANG="clang" JAVA="java"
      os: osx
      osx_image: xcode9.3

      # clang, osx, zeromq
    - compiler: clang
      env: NAME="OSX 10.13 clang zmq" CLANG="clang" ZMQ="zmq"
      os: osx
      osx_image: xcode9.3

      # clang, osx, simtime
    - compiler: clang
      env: NAME="OSX 10.13 clang simtime" CLANG="clang" SIMTIME="simtime"
      os: osx
      osx_image: xcode9.3

      ################LINUX#####################

      # clang, linux, no ssl
    - compiler: clang
      env: NAME="Ubuntu 16.04 clang" CLANG="clang"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libssl-dev
      os: linux

      # g++, linux, no ssl
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 g++" CLANG=""

      # g++, linux, ssl
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libssl-dev
      env: NAME="Ubuntu 16.04 g++ ssl" CLANG="" SSL="ssl"

      # g++, linux, java
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 g++ java" JAVA="java"

      # g++, linux, python
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 g++ python" PYTHON="python"

      # g++, linux, zmq
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 g++ zmq" ZMQ="zmq"

      # g++, linux, simtime
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 g++ simtime" SIMTIME="simtime"
  # g++, linux, android, zmq
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 android zmq" ANDROID="android" ZMQ="zmq" TESTS="" CLANG="" GAMS=""

    # g++, linux, android, ssl
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 16.04 android" ANDROID="android" SSL="ssl" TESTS="" CLANG="" GAMS=""

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - git-core

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install openssl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install zeromq; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link openssl --force; fi


before_script:
  - export
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export OS=linux; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export OS=mac; export CLANG_SUFFIX=; export JAVA_HOME=$(/usr/libexec/java_home) ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$MADARA_ROOT/lib:$GAMS_ROOT/lib:$VREP_ROOT:$CAPNP_ROOT/c++/.libs ; fi
  - if [[ "$JAVA" == "java" ]]; then echo "TRAVIS_JDK_VERSION=TRAVIS_JDK_VERSION" ; fi
script:
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH"
  - echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_BUILD_DIR=$TRAVIS_BUILD_DIR"
  - echo ls $TRAVIS_BUILD_DIR
  - ls $TRAVIS_BUILD_DIR
  - echo $GAMS_ROOT/scripts/$OS/base_build.sh prereqs $CLANG madara $GAMS $TESTS types $SSL $JAVA $ZMQ $PYTHON $ROS $SIMTIME $ANDROID
  - $GAMS_ROOT/scripts/$OS/base_build.sh prereqs $CLANG madara $GAMS $TESTS types $SSL $JAVA $ZMQ $PYTHON $ROS $SIMTIME $ANDROID
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_arguments_parser; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_auctions; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_controller_run; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_controller; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_coordinates; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_elections; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_groups; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_location; fi
  - if [ ! -z $TESTS ] && [ "$ROS" == "ros" ]; then $GAMS_ROOT/bin/test_ros2gams; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_utility; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_variables; fi
  - if [ ! -z $TESTS ]; then $GAMS_ROOT/bin/test_types; fi

