project (gams) : build_files, using_airlib, airlib_lib, using_madara, using_utm, using_ros, using_simtime, using_vrep, vrep_lib, ros_lib, port/java/using_android, port/java/using_java, port/java/using_openjdk, using_boost, using_nortti, using_nothreadlocal, using_oscpp {
  libout = lib
  libout = $(GAMS_ROOT)/lib
  sharedname = GAMS
  includes += src
  includes += $(EIGEN_ROOT)
  dynamicflags += GAMS_BUILD_DLL _USE_MATH_DEFINES
  staticflags += GAMS_BUILD_STATIC _USE_MATH_DEFINES

  Build_Files {
    .
    docs
	  port/java
  }

  Documentation_Files {
    INSTALL.txt
    LICENSE.txt
    README.txt
    VERSION.txt
  }

  Header_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }

    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }
    
    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
      src/gams/platforms/osc
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams
  }

  Source_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }
    
    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }

    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
      src/gams/platforms/osc
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams
  }

  Inline_Files {

    Algorithms {
      src/gams/algorithms
    }

    Area_Coverage {
      src/gams/algorithms/area_coverage
    }

    Auctions {
      src/gams/auctions
    }
    
    Controllers {
      src/gams/controllers
    }

    Elections {
      src/gams/elections
    }
    
    Future {
      src/gams/formations
      src/gams/time
    }

    Groups {
      src/gams/groups
    }
    
    Loggers {
      src/gams/loggers
    }

    Maps {
      src/gams/maps
    }
    
    Platforms {
      src/gams/platforms
      src/gams/platforms/osc
    }

    Pose {
      src/gams/pose
    }

    Utility {
      src/gams/utility
    }

    Variables {
      src/gams/variables
    }

    src/gams
  }


}

project (gams_controller) : using_gams, using_madara {
  exeout = $(GAMS_ROOT)/bin
  exename = gams_controller

  macros +=  _USE_MATH_DEFINES

  Documentation_Files {
  }

  Header_Files {
  }

  Source_Files {
    src/gams/programs/gams_controller.cpp
  }
}

project (ros2gams) : using_madara, using_ros, using_gams, using_capnp, using_simtime, using_boost, using_filesystem {
  exeout = $(GAMS_ROOT)/bin
  exename = ros2gams
  libpaths += $(ROS_ROOT)/../../lib

  requires += ros

  macros +=  _USE_MATH_DEFINES

  libs += roscpp
  libs += cpp_common
  libs += roscpp_serialization
  libs += rostime
  libs += rosbag
  libs += rosbag_storage
  libs += yaml-cpp

  Documentation_Files {
  }

  Header_Files {
  }

  Source_Files {
    src/gams/programs/ros2gams.cpp
  }
}

project (types) : using_madara, using_capnp {
  requires += types

  libout = lib
  libout = $(GAMS_ROOT)/lib
  sharedname = TYPES

  CAPN_Files {
    src/gams/types
  }

  Header_Files {
    src/gams/types
  }

  Source_Files {
    src/gams/types
  }
}

project (ros2gams_pcl_plugin) : using_madara, using_ros, using_gams, using_capnp, using_simtime, using_boost, using_filesystem, using_types {
  requires = types


  libout = $(GAMS_ROOT)/lib
  sharedname = pcl_plugin
  libpaths += $(ROS_ROOT)/../../lib

  includes += src

  requires += ros

  macros +=  _USE_MATH_DEFINES

  libs += roscpp
  libs += cpp_common
  libs += roscpp_serialization
  libs += rostime
  libs += rosbag
  libs += rosbag_storage

  Documentation_Files {
  }

  Header_Files {
    src/gams
  }

  Source_Files {
    src/gams/plugins/ros2gams/pcl_plugin.cpp
  }
}
